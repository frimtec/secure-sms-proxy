apply plugin: 'com.android.library'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: "com.hiya.jacoco-android"

jacoco {
    toolVersion = "0.8.4"
}

System.setProperty("line.separator", "\n")
Properties versionProps = new Properties()
def versionPropsFile = file('../app/version.properties')
if (versionPropsFile.exists()) {
    versionProps.load(new FileInputStream(versionPropsFile))
}
int vcode = (versionProps['VERSION_CODE'] ?: "0").toInteger()
String vname = (versionProps['VERSION_NAME'] ?: "0.0.1")

ext["signing.gnupg.useLegacyGpg"] = ''
ext["signing.gnupg.keyName"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('publish.properties')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
    ext["signing.gnupg.useLegacyGpg"] = System.getenv('SIGNING_GNUPG_USELEGACYGPG')
    ext["signing.gnupg.keyName"] = System.getenv('SIGNING_GNUPG_KEYNAME')
    ext["ossUsername"] = System.getenv('OSS_USERNAME')
    ext["ossPassword"] = System.getenv('OSS_PASSWORD')
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled false
    xml.enabled true
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode vcode
        versionName vname

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        buildConfigField 'int', 'VERSION_CODE', "${vcode}"
        buildConfigField 'String', 'VERSION_NAME', "\"${vname}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        release(MavenPublication) {
            groupId 'com.github.frimtec'
            artifactId 'secure-sms-proxy-api'
            version vname
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/securesmsproxyapi-release.aar")
            pom {
                name = 'Secure SMS Proxy API'
                description = 'API to integrate S2MSP (Secure SMS Proxy) into an android application.'
                url = 'https://github.com/frimtec/secure-sms-proxy'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'frimtec'
                        name = 'Markus Friedli'
                        email = 'frimtec@gmx.ch'
                        url = 'https://github.com/frimtec'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:frimtec/secure-sms-proxy'
                    developerConnection = 'scm:git:git@github.com:frimtec/secure-sms-proxy'
                    url = 'https://github.com/frimtec/secure-sms-proxy'
                }
                ciManagement {
                    system = 'travis-ci'
                    url = 'https://travis-ci.org/frimtec/secure-sms-proxy'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/frimtec/secure-sms-proxy/issues'
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossUsername
                password ossPassword
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
    testImplementation "org.assertj:assertj-core:3.18.0"
    testImplementation 'org.json:json:20190722'
    testImplementation "org.mockito:mockito-core:3.5.15"
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

