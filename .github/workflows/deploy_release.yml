name: Deploy release

on:
  release:
    types: [created]

jobs:
  deploy:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set version
        run: |
          sed -i 's/$version/${{ steps.get_version.outputs.VERSION }}/g' app/version.properties

      - name: Get VCODE_TIME
        id: get_vcode_time
        run: echo ::set-output name=VCODE_TIME::$(date +%s)

      - name: Build APK
        run: bash ./gradlew assembleRelease --stacktrace -Dversion.code.time=${{ steps.get_vcode_time.outputs.VCODE_TIME }} -Dpurchase.validation.key=${{ secrets.PURCHASE_VALIDATION_KEY }}

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app_apk
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Upload APK Release Asset
        id: upload-release-asset-apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{steps.sign_app_apk.outputs.signedReleaseFile}}
          asset_name: app-release.apk
          asset_content_type: application/zip
