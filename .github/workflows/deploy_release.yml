name: Deploy release

on:
  release:
    types: [prereleased, released]

jobs:

  deploy-aar:

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Get the version
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set version
        run: |
          sed -i 's/$version/${{ steps.get_version.outputs.VERSION }}/g' app/version.properties

      - name: Build AAR
        run: bash ./gradlew :securesmsproxyapi:assembleRelease --stacktrace

      - name: Upload AAR Release Asset
        id: upload-release-asset-aar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: securesmsproxyapi/build/outputs/aar/securesmsproxyapi-release.aar
          asset_name: securesmsproxyapi-release.aar
          asset_content_type: application/zip

      - name: Prepare Ringfile
        if: steps.get_release.outputs.prerelease == 'false'
        run: echo "${{ secrets.gpg_ringfile }}" | base64 --decode > ringfile

      - name: Publish AAR
        if: steps.get_release.outputs.prerelease == 'false'
        run: bash ./gradlew :securesmsproxyapi:publish --stacktrace
        env:
          SIGNING_KEYID: ${{ secrets.gpg_key_id }}
          SIGNING_PASSWORD: ${{ secrets.gpg_passphrase }}
          SIGNING_RINGFILE: ../ringfile
          OSS_USERNAME: ${{ secrets.nexus_username }}
          OSS_PASSWORD: ${{ secrets.nexus_password }}
